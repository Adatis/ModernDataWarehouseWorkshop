let

    CreateDateTable = (StartDate, EndDate) =>

let

    StartDate=#date(2001,1,1),

    EndDate=#date(2020,12,31),

    //Create lists of month and day names for use later on

    MonthList = {"January", "February", "March", "April", "May", "June"

                 , "July", "August", "September", "October", "November", "December"},

    DayList = {"Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"},

    //Find the number of days between the end date and the start date

    NumberOfDates = Duration.Days(EndDate-StartDate),

    //Generate a continuous list of dates from the start date to the end date

    DateList = List.Dates(StartDate, NumberOfDates, #duration(1, 0, 0, 0)),

    //Turn this list into a table

    TableFromList = Table.FromList(DateList, Splitter.SplitByNothing(), {"Date"}

                     , null, ExtraValues.Error),

    //Caste the single column in the table to type date

    ChangedType = Table.TransformColumnTypes(TableFromList,{{"Date", type date}}),

    //Add custom columns for day of month, month number, year
	
	DateKey  = Table.AddColumn(ChangedType, "DateKey", each Date.ToText([Date], "yyyMMdd")),
	
    DayOfMonth = Table.AddColumn(DateKey, "DayOfMonth", each Date.Day([Date])),
    
    //To deal with average daily measures
    DaysInMonth = Table.AddColumn(DayOfMonth, "DaysInMonth", each Date.Day(Date.EndOfMonth([Date]))),

    DaysInYear = Table.AddColumn(DaysInMonth, "DaysInYear", each Duration.Days(Duration.From(Date.EndOfYear([Date]) - Date.StartOfYear([Date]))) +1),
	
	DateYoY = Table.AddColumn(DaysInYear, "DateYoY", each Date.AddYears([Date],-1)),

    WeekNumber = Table.AddColumn(DateYoY, "WeekNumber", each Date.WeekOfYear([Date])),

    MonthNumber = Table.AddColumn(WeekNumber, "MonthNumber", each Date.Month([Date])),

    QuarterNumber = Table.AddColumn(MonthNumber, "QuarterNumber", each Date.QuarterOfYear([Date])),
    
    MonthStartDate = Table.AddColumn(QuarterNumber, "MonthStartDate", each Date.StartOfMonth([Date])),

    MonthEndDate = Table.AddColumn(MonthStartDate, "MonthEndDate", each Date.EndOfMonth([Date])),

    Year = Table.AddColumn(MonthEndDate, "Year", each Date.Year([Date])),

    DayOfWeekNumber = Table.AddColumn(Year, "DayOfWeekNumber", each Date.DayOfWeek([Date])+1),

    //Since Power Query doesn't have functions to return day or month names, use the lists created earlier for this

    MonthName = Table.AddColumn(DayOfWeekNumber, "MonthName", each MonthList{[MonthNumber]-1}),

    DayName = Table.AddColumn(MonthName, "DayName", each DayList{[DayOfWeekNumber]-1}),

    //ISO
    InsertISOYear = Table.AddColumn(DayName , "ISOYear", each Date.Year(Date.AddDays([Date],3-Date.DayOfWeek([Date],1))), type number),

    InsertISOSupportDate = Table.AddColumn(InsertISOYear , "ISOSupportDate", each #date([ISOYear],1,3)),

    InsertISOWeek = Table.AddColumn(InsertISOSupportDate , "ISOWeek", each Number.IntegerDivide(Duration.Days( [Date]-[ISOSupportDate])+Date.DayOfWeek([ISOSupportDate],0)+6,7), type number ),

	//All Time From ISO Values
	WeekNumberAllTime = Table.AddColumn(InsertISOWeek, "WeekNumberAllTime", each ([ISOYear]*53) + [ISOWeek]),
	
	MonthNumberAllTime = Table.AddColumn(WeekNumberAllTime, "MonthNumberAllTime", each ([ISOYear]*12)+[MonthNumber]),
	
	DayNumberAllTime = Table.AddColumn(MonthNumberAllTime, "DayNumberAllTime", each Duration.Days(Duration.From([Date] - Date.FromText("1970-01-01")))),
	
    //Deal with data type changes

    DataTypeChangesNo = Table.TransformColumnTypes(DayNumberAllTime ,{{"MonthNumber", Int64.Type}, {"DaysInMonth", Int64.Type}, {"DaysInYear", Int64.Type}, {"DayOfMonth", Int64.Type}, {"WeekNumber", Int64.Type}, {"DayOfWeekNumber", Int64.Type}, {"WeekNumberAllTime", Int64.Type}, {"MonthNumberAllTime", Int64.Type}, {"DayNumberAllTime", Int64.Type}}),

    DataTypeChangesDate = Table.TransformColumnTypes(DataTypeChangesNo, {{"MonthStartDate", type date}, {"MonthEndDate", type date}, {"DateYoY", type date}}),
	
    //Add a column that returns true if the date on rows is the current date

    IsToday = Table.AddColumn(DataTypeChangesDate , "IsToday", each Date.IsInCurrentDay([Date])),

    IsCurrentMonth = Table.AddColumn(IsToday, "IsCurrentMonth", each Date.IsInCurrentMonth([Date])),

    IsCurrentQuarter = Table.AddColumn(IsCurrentMonth, "IsCurrentQuarter", each Date.IsInCurrentQuarter([Date])),

    IsLeapYear = Table.AddColumn(IsCurrentQuarter, "IsLeapYear", each Date.IsLeapYear([Date])),
    
    //Reporting period specific to business requirement
    IsReportingPeriod = Table.AddColumn(IsLeapYear, "IsReportingPeriod", each if [Date] >= Date.StartOfMonth(Date.AddMonths(DateTime.Date(DateTime.LocalNow()),-15)) and [Date] <= Date.EndOfMonth(Date.AddMonths(DateTime.Date(DateTime.LocalNow()),-1)) then "TRUE" else "FALSE")
    
in

    IsReportingPeriod

in

    CreateDateTable